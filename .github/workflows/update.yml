name: Update Website

on:
  push:
    # any push without setting a version tag will update the website
    # when a file within the website directory is updated:
    tags-ignore:
      - 'v*'
    branches:
      - master
      - main
    paths:
      - 'website/**'

env:
  REQUIREMENTS: website/requirements.txt
  MKDOCS: website/mkdocs.yml
  WEBSITE: website/site

jobs:
  deploy:
    name: Deploy Website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: 'Get Previous tag'
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

      - name: Extract Version Tag
        id: extract
        run: echo ::set-output name=version::${GITHUB_REF#refs/*/v}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Upgrade pip
        run: |
          # install pip=>20.1 to use "pip cache dir"
          python3 -m pip install --upgrade pip
      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/${REQUIREMENTS}') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: python3 -m pip install -r ./${REQUIREMENTS}

      - name: Update Website
        run: |
          mike deploy --config-file ./${MKDOCS} --push --update-aliases ${{ steps.version.outputs.tag }} latest
          mike set-default --config-file ./${MKDOCS} --push latest

      - name: Copy Website to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./${WEBSITE}
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          tag_name: ${{ steps.prepare_tag.outputs.deploy_tag_name }}
          full_commit_message: 'Deploy Website ${{ steps.version.outputs.tag }}'
